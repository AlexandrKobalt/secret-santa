package main

import (
	"log"
	"os"
	"secret-santa/instances"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

func main() {
	config := instances.GetConfig()

	bot, err := tgbotapi.NewBotAPI(os.Getenv("BOT_TOKEN"))
	if err != nil {
		log.Fatal(err)
	}

	bot.Debug = config.Debug

	log.Printf("Authorized on account %s", bot.Self.UserName)

	updateConfig := tgbotapi.NewUpdate(0)
	updateConfig.Timeout = 60

	updates, err := bot.GetUpdatesChan(updateConfig)
	if err != nil {
		log.Fatal(err)
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	for update := range updates {
		if update.Message == nil {
			continue
		}

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
		msg.ReplyMarkup = createKeyboard()

		switch update.Message.Text {
		case "/start":
			msg.Text = "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ —Ç–∞–π–Ω–æ–≥–æ —Å–∞–Ω—Ç—É :)\n –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:"
		case "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É":
			msg.Text = "–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É 1!"
		case "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ":
			msg.Text = "–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É 2!"
		default:
			msg.Text = "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üòï"
		}

		bot.Send(msg)
	}
}

func createKeyboard() tgbotapi.ReplyKeyboardMarkup {
	keyboard := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É"),
			tgbotapi.NewKeyboardButton("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ"),
		),
	)

	return keyboard
}
